回溯法：
1、概念
      回溯算法实际上一个类似枚举的搜索尝试过程，主要是在搜索尝试过程中寻找问题的解，当发现已不满足求解条件时，就“回溯”返回，尝试别的路径。

   回溯法是一种选优搜索法，按选优条件向前搜索，以达到目标。但当探索到某一步时，发现原先选择并不优或达不到目标，就退回一步重新选择，这种走不通就退回再走的技术为回溯法，而满足回溯条件的某个状态的点称为“回溯点”。

     许多复杂的，规模较大的问题都可以使用回溯法，有“通用解题方法”的美称。

2、基本思想
   在包含问题的所有解的解空间树中，按照深度优先搜索的策略，从根结点出发深度探索解空间树。当探索到某一结点时，要先判断该结点是否包含问题的解，如果包含，就从该结点出发继续探索下去，如果该结点不包含问题的解，则逐层向其祖先结点回溯。（其实回溯法就是对隐式图的深度优先搜索算法）。

       若用回溯法求问题的所有解时，要回溯到根，且根结点的所有可行的子树都要已被搜索遍才结束。

       而若使用回溯法求任一个解时，只要搜索到问题的一个解就可以结束。
参考[698]划分为k个相等的子集.java
大整数乘法
线性时间选择
合并排序
「贪心算法」的直觉，举不出反例，并且编码可以通过所有测试用例即可。

「力扣」第 12 题：整数转罗马数字，贪心思想更多来源于直觉；
「力扣」第 452 题：用最少数量的箭引爆气球，画图发现贪心策略；
「力扣」第 122 题：买卖股票的最佳时机 II，需要简单推导了；
「力扣」第 55 题： 跳跃游戏，画图思考；
「力扣」第 435 题： 无重叠区间，画图思考；
「力扣」第 455 题：分发饼干；
「力扣」第 343 题： 整数拆分，需要简单推导。
「力扣」第 300 题：最长上升子序列，本质上还是动态规划，只不过在推导的过程中发现决策的过程可以贪心进行（具有贪心选择性质）。

作者：liweiwei1419
链接：https://leetcode-cn.com/problems/merge-intervals/solution/tan-xin-suan-fa-java-by-liweiwei1419-3/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。